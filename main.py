import streamlit as st

from src import LlamaService


# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
if "messages" not in st.session_state:
    st.session_state.messages = []

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞
llama = LlamaService()

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–Ω–æ–ø–∫–∞ –æ—á–∏—Å—Ç–∫–∏
col1, col2 = st.columns([4, 1])
with col1:
    st.title("üí¨ –ß–∞—Ç —Å LLM")
with col2:
    if st.button("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å"):
        st.session_state.messages = []
        st.rerun()

# –ß—Ç–æ–±—ã —Å –Ω–æ–≤—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º –Ω–µ –∑–∞—Ç–∏—Ä–∞–ª–∏—Å—å —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
if prompt := st.chat_input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"):
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    # –û—Ç–≤–µ—Ç –æ—Ç LLM
    with st.chat_message("assistant"):
        with st.spinner("–ü–µ—á–∞—Ç–∞–µ—Ç..."):
            response = llama.generate_response(prompt, st.session_state.messages)
            st.markdown(response)
            st.session_state.messages.append({"role": "assistant", "content": response}) 
