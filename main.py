import streamlit as st
import sqlite3
from src.llm import LlamaService

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Å—Å–∏–∏
if "messages" not in st.session_state:
    st.session_state.messages = []
if "user_id" not in st.session_state:
    st.session_state.user_id = None
if "username" not in st.session_state:
    st.session_state.username = None
if "change_user" not in st.session_state:
    st.session_state.change_user = False

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–æ user_id
def get_username_by_id(user_id, db_file):
    try:
        conn = sqlite3.connect(db_file)
        cursor = conn.cursor()
        cursor.execute("SELECT username FROM users WHERE user_id = ?", (user_id,))
        result = cursor.fetchone()
        conn.close()
        return result[0] if result else None
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: {str(e)}")
        return None

# –ü–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
if st.session_state.user_id is None or st.session_state.change_user:
    st.write("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è:")
    username = st.text_input("–ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è", value="", placeholder="–í–≤–µ–¥–∏—Ç–µ –∏–º—è")
    if st.button("–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –∏–º—è"):
        if username:
            temp_llama = LlamaService()
            user_id = temp_llama._get_or_create_user(username)
            st.session_state.user_id = user_id
            st.session_state.username = username
            st.session_state.change_user = False
            st.rerun()
        else:
            st.error("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.")

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–µ—Ä–≤–∏—Å–∞ —Å user_id
llama = LlamaService(user_id=st.session_state.user_id)

# –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç –ª–∏ username –≤ session_state —Ä–µ–∞–ª—å–Ω–æ–º—É –∏–º–µ–Ω–∏ –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö
if st.session_state.user_id:
    db_username = get_username_by_id(st.session_state.user_id, llama.db_file)
    if db_username and db_username != st.session_state.username:
        st.session_state.username = db_username

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ –∫–Ω–æ–ø–∫–∏
col1, col2, col3, col4 = st.columns([2, 1, 1, 1])
with col1:
    st.title(f"üí¨ –ß–∞—Ç —Å LLM (–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {st.session_state.username})")
with col2:
    if st.button("üóëÔ∏è –û—á–∏—Å—Ç–∏—Ç—å"):
        st.session_state.messages = []
        llama.clear_memory()
        st.rerun()
with col3:
    if st.button("üë§ –°–º–µ–Ω–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"):
        st.session_state.change_user = True
        st.session_state.user_id = None
        st.session_state.username = None
        st.rerun()
with col4:
    if st.button("üîÑ –°–±—Ä–æ—Å–∏—Ç—å —Å–µ—Å—Å–∏—é"):
        for key in st.session_state.keys():
            del st.session_state[key]
        st.session_state.change_user = True
        st.rerun()

# –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏–π
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.markdown(message["content"])

# –ü–æ–ª–µ –≤–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏—è
if prompt := st.chat_input("–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"):
    # –î–æ–±–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –∏—Å—Ç–æ—Ä–∏—é –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.markdown(prompt)

    with st.chat_message("assistant"):
        with st.spinner("–ü–µ—á–∞—Ç–∞–µ—Ç..."):
            # –ü–µ—Ä–µ–¥–∞–µ–º –ø–æ–ª–Ω—É—é –∏—Å—Ç–æ—Ä–∏—é
            response = llama.generate_response(prompt, st.session_state.messages)
            st.markdown(response)
            st.session_state.messages.append({"role": "assistant", "content": response})